#!/bin/bash

# Copyright 2015 Insight Data Science
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

S3_BUCKET=https://s3-us-west-2.amazonaws.com/insight-tech

CASSANDRA_VER=3.11.2
ELASTICSEARCH_URL=6.2.4
FLINK_VER=1.4.2
FLINK_HADOOP_VER=27
FLINK_SCALA_VER=2.11
HADOOP_VER=2.7.6
HBASE_VER=1.2.6
HIVE_VER=2.3.3
KAFKA_VER=1.1.0
KAFKA_SCALA_VER=2.12
KIBANA_VER=6.2.4
OPSCENTER_VER=6.5.0
PIG_VER=0.17.0
PRESTO_VER=0.200
REDIS_VER=4.0.9
SPARK_VER=2.3.1
SPARK_HADOOP_VER=2.7
STORM_VER=1.2.1
ZOOKEEPER_VER=3.4.13


CASSANDRA_URL=${S3_BUCKET}/cassandra/apache-cassandra-${CASSANDRA_VER}-bin.tar.gz
ELASTICSEARCH_URL=${S3_BUCKET}/elasticsearch/elasticsearch-${ELASTICSEARCH_VER}.tar.gz
FLINK_URL=${S3_BUCKET}/flink/flink-${FLINK_VER}-bin-hadoop${FLINK_HADOOP_VER}-scala_${FLINK_SCALA_VER}.tgz
HADOOP_URL=${S3_BUCKET}/hadoop/hadoop-$HADOOP_VER.tar.gz
HBASE_URL=${S3_BUCKET}/hbase/hbase-$HBASE_VER-bin.tar.gz
HIVE_URL=${S3_BUCKET}/hive/apache-hive-$HIVE_VER-bin.tar.gz
KAFKA_URL=${S3_BUCKET}/kafka/kafka_$KAFKA_SCALA_VER-$KAFKA_VER.tgz
KIBANA_URL=${S3_BUCKET}/kibana/kibana-$KIBANA_VER-linux-x86_64.tar.gz
OPSCENTER_URL=${S3_BUCKET}/cassandra/opscenter-${OPSCENTER_VER}.tar.gz
PIG_URL=${S3_BUCKET}/pig/pig-$PIG_VER.tar.gz
PRESTO_URL=${S3_BUCKET}/presto-server-$PRESTO_VER.tar.gz
REDIS_URL=${S3_BUCKET}/redis/redis-$REDIS_VER.tar.gz
SPARK_URL=${S3_BUCKET}/spark/spark-$SPARK_VER-bin-hadoop$SPARK_HADOOP_VER.tgz
STORM_URL=${S3_BUCKET}/storm/apache-storm-$STORM_VER.tar.gz
ZOOKEEPER_URL=${S3_BUCKET}/zookeeper/zookeeper-$ZOOKEEPER_VER.tar.gz

cd $(dirname "${BASH_SOURCE}")

if [ "$#" -ne 1 ]; then
  echo "Provide technology to download!"
  exit 1
fi

TECHNOLOGY=$1
TECHNOLOGY_HOME=$(echo $(echo $TECHNOLOGY | tr [a-z] [A-Z])_HOME)
TECHNOLOGY_URL=$(eval "echo \$$(echo $TECHNOLOGY | tr [a-z] [A-Z])_URL")

check_folder () {
  if [ -d /usr/local/$TECHNOLOGY ]; then
    echo "$TECHNOLOGY already installed."
  else
    echo "$TECHNOLOGY missing."
    echo "Installing $TECHNOLOGY ..."
    curl_tech
  fi
}

curl_tech () {
  curl -sL $TECHNOLOGY_URL | gunzip | sudo tar xv -C /usr/local >> ~/configurator_log.txt
  if [ -d /usr/local/*${TECHNOLOGY}* ]; then
    sudo mv /usr/local/*$TECHNOLOGY* /usr/local/$TECHNOLOGY
    echo "export $TECHNOLOGY_HOME=/usr/local/$TECHNOLOGY" | cat >> ~/.profile
    echo -e "export PATH=\$PATH:\$$TECHNOLOGY_HOME/bin\n" | cat >> ~/.profile
    sudo chown -R $USER /usr/local/$TECHNOLOGY
    eval "echo \$$(echo $TECHNOLOGY | tr [a-z] [A-Z])_VER" >> /usr/local/$TECHNOLOGY/tech_ver.txt
  else
    echo "The software wasn't downloaded correctly from the URL ($TECHNOLOGY_URL). Check Pegasus GitHub README."
  fi
}

check_folder
